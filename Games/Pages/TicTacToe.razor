@page "/tictactoe"
@using Games.TicTacToeClasses

<h3>Tic-Tac-Toe</h3>

<p style="@(game.Winner != TicTocToeTeam.None ? "font-size: 50px;" : "")">Winner: @game.Winner</p>

@if (game.isCrossTurn)
{
    <p class="blue">Cross Turn</p>
}
else
{
    <p class="red">Circle Turn</p>
}

<button @onclick="ResetGame" class="btn btn-primary mb-3">New Game</button>

<div class="grid">
    @for (var i = 0; i < 3; i++)
    {
        <div class="row">
            @for (var j = 0; j < 3; j++)
            {
                var x = i;
                var y = j;
                <div class="square border p-4" @onclick="() => ChangeStatus(x, y)">
                    <i class="@game.grid.GetSquare(x, y).GetStatusHtml() square-icon"></i>
                </div>
            }
        </div>
    }
</div>

<style>
    .square {
        min-width: 160px;
        min-height: 160px;
    }

    .square-icon {
        font-size: 100px;
    }

    .red {
        color: red;
    }

    .blue {
        color: dodgerblue;
    }
</style>

@code {
    TicTacToeGame game = new TicTacToeGame();

    public void ResetGame()
    {
        game = new TicTacToeGame();
    }

    public void ChangeStatus(int xPos, int yPos)
    {
        game.ChangeSquareStatus(xPos, yPos);
    }
}
